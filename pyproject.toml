[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"


[project]
name = "scientific-paper"
description = "This is the code used in a scientific paper I wrote for school"
readme = "README.md"
license = { text = "MIT" }
authors = [{ name = "realshouzy" }]
maintainers = [{ name = "realshouzy" }]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
]
requires-python = ">=3.10"
dynamic = ["version", "dependencies"]

[project.urls]
Repository = "https://github.com/realshouzy/scientific-paper"

[project.optional-dependencies]
# keep in sync with requirements-dev.txt
dev = ["bandit", "black", "isort", "mypy", "pre-commit", "pylint", "ruff"]

[project.scripts]
linting-demonstration = "src.linting_demonstration:main"
assert-enhancer = "src.assert_enhancer:main"

[tool.setuptools]
packages = ["src"]
license-files = ["LICENSE"]

[tool.setuptools.package-data]
auto_file_sorter = ["py.typed"]

[tool.setuptools.dynamic]
version = { attr = "src.__version__" }
dependencies = { file = "requirements.txt" }

[tool.black]
target-version = ["py311", "py310"]
line-length = 88

[tool.isort]
profile = "black"

[tool.mypy]
strict = true
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
disallow_untyped_calls = true
warn_redundant_casts = true
ignore_missing_imports = true
show_error_codes = true
disallow_subclassing_any = true
disallow_untyped_decorators = true
warn_return_any = true
strict_equality = true
no_implicit_reexport = true
no_implicit_optional = true


[tool.ruff]
select = ["ALL"]
ignore = ["ANN101", "ANN102", "D107", "T201", "PD011"]
unfixable = []
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
show-fixes = true
target-version = "py311"
line-length = 88
exclude = ["src/example*.py"]

[tool.ruff.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.pydocstyle]
convention = "pep257"

[tool.pylint]
disable = ["R0903", "R0801"]

[tool.bandit]
exclude_dirs = ["src/example*.py"]
